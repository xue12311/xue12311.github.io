<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>学胖子的个人博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://xue12311.github.io/"/>
  <updated>2021-05-27T14:14:41.887Z</updated>
  <id>http://xue12311.github.io/</id>
  
  <author>
    <name>学胖子</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Jetpack Compose学习  Divider</title>
    <link href="http://xue12311.github.io/2021/05/27/Jetpack%20Compose/Jetpack%20Compose%20Divider/"/>
    <id>http://xue12311.github.io/2021/05/27/Jetpack Compose/Jetpack Compose Divider/</id>
    <published>2021-05-27T07:29:42.000Z</published>
    <updated>2021-05-27T14:14:41.887Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="jetpack-compose学习-divider-分割线"> Jetpack Compose学习 -------- Divider 分割线</span></h2><h3><span id="divider-分割线-基本使用"> Divider 分割线 基本使用</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">ComposableSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">    Column(Modifier.fillMaxWidth()) &#123;</span><br><span class="line">        Text(<span class="string">"Hello Word Hello Word Hello Word"</span>)</span><br><span class="line">        <span class="comment">//分割线</span></span><br><span class="line">        Divider(</span><br><span class="line">            <span class="comment">//颜色</span></span><br><span class="line">            color = Color.Blue,</span><br><span class="line">            <span class="comment">//线的高度</span></span><br><span class="line">            thickness = <span class="number">1</span>.dp,</span><br><span class="line">            <span class="comment">//距离开始的间距</span></span><br><span class="line">            startIndent = <span class="number">10</span>.dp</span><br><span class="line">        )</span><br><span class="line">        Text(<span class="string">"Hello Word"</span>)</span><br><span class="line">        <span class="comment">//分割线</span></span><br><span class="line">        Divider(</span><br><span class="line">            Modifier</span><br><span class="line">                .fillMaxWidth()</span><br><span class="line">                .height(<span class="number">1</span>.dp)</span><br><span class="line">                .padding(start = <span class="number">10</span>.dp, end = <span class="number">10</span>.dp),</span><br><span class="line">            <span class="comment">//颜色</span></span><br><span class="line">            color = Color.Green,</span><br><span class="line">        )</span><br><span class="line">        Text(<span class="string">"Hello Word Hello Word"</span>)</span><br><span class="line">        Text(<span class="string">"Hello Word Hello Word Hello Word"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;jetpack-compose学习-divider-分割线&quot;&gt; Jetpack Compose学习 -------- Divider 分割线&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;divider-分割线-基本使用&quot;&gt; Divider 分割
      
    
    </summary>
    
      <category term="android" scheme="http://xue12311.github.io/categories/android/"/>
    
      <category term="Jetpack" scheme="http://xue12311.github.io/categories/android/Jetpack/"/>
    
    
      <category term="android" scheme="http://xue12311.github.io/tags/android/"/>
    
      <category term="Jetpack Compose" scheme="http://xue12311.github.io/tags/Jetpack-Compose/"/>
    
  </entry>
  
  <entry>
    <title>Jetpack Compose学习  AnimationVisibility</title>
    <link href="http://xue12311.github.io/2021/05/27/Jetpack%20Compose/Jetpack%20Compose%20AnimationVisibility/"/>
    <id>http://xue12311.github.io/2021/05/27/Jetpack Compose/Jetpack Compose AnimationVisibility/</id>
    <published>2021-05-27T06:51:03.000Z</published>
    <updated>2021-05-27T14:14:41.877Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="jetpack-compose学习-animationvisibility"> Jetpack Compose学习 -------- AnimationVisibility</span></h2><h3><span id="animationvisibility-动画-可见-基础用法"> AnimationVisibility 动画 可见 基础用法</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@ExperimentalAnimationApi</span></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">ComposableSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> state <span class="keyword">by</span> remember &#123;</span><br><span class="line">        mutableStateOf(<span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    Column(</span><br><span class="line">        Modifier.fillMaxSize(),</span><br><span class="line">        horizontalAlignment = Alignment.CenterHorizontally,</span><br><span class="line">        verticalArrangement = Arrangement.Center</span><br><span class="line">    ) &#123;</span><br><span class="line">        AnimatedVisibility(visible = state) &#123;</span><br><span class="line">            Text(</span><br><span class="line">                text = <span class="string">"这是一个普通的正文"</span>,</span><br><span class="line">                fontWeight = FontWeight.W900,</span><br><span class="line">                style = MaterialTheme.typography.h5</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">        Spacer(modifier = Modifier.height(<span class="number">50</span>.dp))</span><br><span class="line">        Button(onClick = &#123; state = !state &#125;) &#123;</span><br><span class="line">            Text(</span><br><span class="line">                text = <span class="keyword">if</span> (state) &#123;</span><br><span class="line">                    <span class="string">"隐藏"</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="string">"显示"</span></span><br><span class="line">                &#125;</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="进场动画"> 进场动画</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@ExperimentalAnimationApi</span></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">ComposableSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> state <span class="keyword">by</span> remember &#123; mutableStateOf(<span class="literal">true</span>) &#125;</span><br><span class="line">    Column(</span><br><span class="line">        Modifier.fillMaxSize(),</span><br><span class="line">        horizontalAlignment = Alignment.CenterHorizontally,</span><br><span class="line">        verticalArrangement = Arrangement.Center</span><br><span class="line">    ) &#123;</span><br><span class="line">        AnimatedVisibility(</span><br><span class="line">            visible = state,</span><br><span class="line">            enter = slideInVertically(</span><br><span class="line">                <span class="comment">//初始位置 Y轴</span></span><br><span class="line">                initialOffsetY = &#123; -<span class="number">1000</span> &#125;,</span><br><span class="line">                animationSpec = tween(</span><br><span class="line">                    <span class="comment">//动画持续时间</span></span><br><span class="line">                    durationMillis = <span class="number">1200</span></span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line">        ) &#123;</span><br><span class="line">            Text(</span><br><span class="line">                text = <span class="string">"这是一个普通的正文"</span>,</span><br><span class="line">                fontWeight = FontWeight.W900,</span><br><span class="line">                style = MaterialTheme.typography.h5</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">        Spacer(modifier = Modifier.height(<span class="number">50</span>.dp))</span><br><span class="line">        Button(onClick = &#123; state = !state &#125;) &#123;</span><br><span class="line">            Text(</span><br><span class="line">                text = <span class="keyword">if</span> (state) &#123;</span><br><span class="line">                    <span class="string">"隐藏"</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="string">"显示"</span></span><br><span class="line">                &#125;</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@ExperimentalAnimationApi</span></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">ComposableSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> state <span class="keyword">by</span> remember &#123; mutableStateOf(<span class="literal">true</span>) &#125;</span><br><span class="line">    Column(</span><br><span class="line">        Modifier.fillMaxSize(),</span><br><span class="line">        horizontalAlignment = Alignment.CenterHorizontally,</span><br><span class="line">        verticalArrangement = Arrangement.Center</span><br><span class="line">    ) &#123;</span><br><span class="line">        AnimatedVisibility(</span><br><span class="line">            visible = state,</span><br><span class="line">            <span class="comment">//垂直滑入</span></span><br><span class="line">            enter = slideInVertically(</span><br><span class="line">                <span class="comment">//初始位置 Y轴</span></span><br><span class="line">                initialOffsetY = &#123; -<span class="number">1000</span> &#125;,</span><br><span class="line">                animationSpec = tween(</span><br><span class="line">                    <span class="comment">//动画持续时间</span></span><br><span class="line">                    durationMillis = <span class="number">1200</span></span><br><span class="line">                )</span><br><span class="line">                <span class="comment">//淡入</span></span><br><span class="line">            ) + fadeIn(</span><br><span class="line">                animationSpec = tween(</span><br><span class="line">                    <span class="comment">//动画持续时间</span></span><br><span class="line">                    durationMillis = <span class="number">1200</span></span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line">        ) &#123;</span><br><span class="line">            Text(</span><br><span class="line">                text = <span class="string">"这是一个普通的正文"</span>,</span><br><span class="line">                fontWeight = FontWeight.W900,</span><br><span class="line">                style = MaterialTheme.typography.h5</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">        Spacer(modifier = Modifier.height(<span class="number">50</span>.dp))</span><br><span class="line">        Button(onClick = &#123; state = !state &#125;) &#123;</span><br><span class="line">            Text(</span><br><span class="line">                text = <span class="keyword">if</span> (state) &#123;</span><br><span class="line">                    <span class="string">"隐藏"</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="string">"显示"</span></span><br><span class="line">                &#125;</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;jetpack-compose学习-animationvisibility&quot;&gt; Jetpack Compose学习 -------- AnimationVisibility&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;animationvisi
      
    
    </summary>
    
      <category term="android" scheme="http://xue12311.github.io/categories/android/"/>
    
      <category term="Jetpack" scheme="http://xue12311.github.io/categories/android/Jetpack/"/>
    
    
      <category term="android" scheme="http://xue12311.github.io/tags/android/"/>
    
      <category term="Jetpack Compose" scheme="http://xue12311.github.io/tags/Jetpack-Compose/"/>
    
  </entry>
  
  <entry>
    <title>Jetpack Compose学习  Swipeable</title>
    <link href="http://xue12311.github.io/2021/05/27/Jetpack%20Compose/Jetpack%20Compose%20Swipeable/"/>
    <id>http://xue12311.github.io/2021/05/27/Jetpack Compose/Jetpack Compose Swipeable/</id>
    <published>2021-05-27T06:13:11.000Z</published>
    <updated>2021-05-27T14:14:41.897Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="jetpack-compose学习-swipeable-滑动"> Jetpack Compose学习 -------- Swipeable 滑动</span></h2><h3><span id="swipeable-滑动-基本使用"> Swipeable 滑动 基本使用</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">ComposableSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> blockSize = <span class="number">48</span>.dp</span><br><span class="line">    <span class="keyword">var</span> blockSizePx = with(LocalDensity.current) &#123; blockSize.toPx() &#125;</span><br><span class="line">    <span class="keyword">var</span> swipeableState = rememberSwipeableState(initialValue = Status.CLOSE)</span><br><span class="line">    <span class="keyword">var</span> anchors = mapOf(</span><br><span class="line">        <span class="number">0f</span> to Status.CLOSE,</span><br><span class="line">        blockSizePx to Status.OPEN</span><br><span class="line">    )</span><br><span class="line">    Box(</span><br><span class="line">        modifier = Modifier</span><br><span class="line">            .size(</span><br><span class="line">                height = blockSize,</span><br><span class="line">                width = blockSize * <span class="number">2</span></span><br><span class="line">            )</span><br><span class="line">            .background(Color.LightGray)</span><br><span class="line">    ) &#123;</span><br><span class="line">        Box(</span><br><span class="line">            modifier = Modifier</span><br><span class="line">                <span class="comment">//滑动</span></span><br><span class="line">                .swipeable(</span><br><span class="line">                    state = swipeableState,</span><br><span class="line">                    <span class="comment">//锚点，可以通过锚点设置在不同状态时所应该对应的偏移量信息</span></span><br><span class="line">                    anchors = anchors,</span><br><span class="line">                    <span class="comment">//常用作定制不同锚点间吸附效果的临界阈值</span></span><br><span class="line">                    <span class="comment">//常用有 FixedThreshold(Dp) 和 FractionalThreshold(Float)等</span></span><br><span class="line">                    thresholds = &#123; from, to -&gt;</span><br><span class="line">                        <span class="keyword">if</span> (from == Status.CLOSE) &#123;</span><br><span class="line">                            FractionalThreshold(<span class="number">0.3f</span>)</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            FractionalThreshold(<span class="number">0.5f</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="comment">//手势方向，被修饰组件的手势方向只能是水平或垂直</span></span><br><span class="line">                    orientation = Orientation.Horizontal,</span><br><span class="line">                )</span><br><span class="line">                <span class="comment">//移动</span></span><br><span class="line">                .offset &#123;</span><br><span class="line">                    <span class="comment">//整体移动</span></span><br><span class="line">                    IntOffset(swipeableState.offset.value.toInt(), <span class="number">0</span>)</span><br><span class="line">                &#125;</span><br><span class="line">                .size(blockSize)</span><br><span class="line">                .background(Color.DarkGray)</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> <span class="class"><span class="keyword">class</span> <span class="title">Status</span> </span>&#123;</span><br><span class="line">    CLOSE, OPEN</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;jetpack-compose学习-swipeable-滑动&quot;&gt; Jetpack Compose学习 -------- Swipeable 滑动&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;swipeable-滑动-基本使用&quot;&gt; Swipeab
      
    
    </summary>
    
      <category term="android" scheme="http://xue12311.github.io/categories/android/"/>
    
      <category term="Jetpack" scheme="http://xue12311.github.io/categories/android/Jetpack/"/>
    
    
      <category term="android" scheme="http://xue12311.github.io/tags/android/"/>
    
      <category term="Jetpack Compose" scheme="http://xue12311.github.io/tags/Jetpack-Compose/"/>
    
  </entry>
  
  <entry>
    <title>Jetpack Compose学习  ModalBottomSheetLayout</title>
    <link href="http://xue12311.github.io/2021/05/27/Jetpack%20Compose/Jetpack%20Compose%20ModalBottomSheetLayout/"/>
    <id>http://xue12311.github.io/2021/05/27/Jetpack Compose/Jetpack Compose ModalBottomSheetLayout/</id>
    <published>2021-05-27T03:13:12.000Z</published>
    <updated>2021-05-27T14:14:41.895Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="jetpack-compose学习-modalbottomsheetlayout-底部弹出布局"> Jetpack Compose学习 -------- ModalBottomSheetLayout 底部弹出布局</span></h2><h3><span id="modalbottomsheetlayout-底部弹出布局-基本使用"> ModalBottomSheetLayout 底部弹出布局 基本使用</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@ExperimentalMaterialApi</span></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">ComposableSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> state = rememberModalBottomSheetState(initialValue = ModalBottomSheetValue.Hidden)</span><br><span class="line">    <span class="keyword">val</span> scope = rememberCoroutineScope()</span><br><span class="line">    ModalBottomSheetLayout(</span><br><span class="line">        sheetContent = &#123;</span><br><span class="line">            Column &#123;</span><br><span class="line">                ListItem(</span><br><span class="line">                    text = &#123;</span><br><span class="line">                        Text(text = <span class="string">"选择分享到哪里吧~"</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                )</span><br><span class="line">                ListItem(</span><br><span class="line">                    text = &#123;</span><br><span class="line">                        Text(text = <span class="string">"github"</span>)</span><br><span class="line">                    &#125;,</span><br><span class="line">                    icon = &#123;</span><br><span class="line">                        Surface(</span><br><span class="line">                            shape = CircleShape,</span><br><span class="line">                            color = Color(<span class="number">0xFF181717</span>)</span><br><span class="line">                        ) &#123;</span><br><span class="line">                            Icon(</span><br><span class="line">                                painterResource(id = R.drawable.ic_github),</span><br><span class="line">                                <span class="literal">null</span>,</span><br><span class="line">                                Modifier.padding(<span class="number">4</span>.dp),</span><br><span class="line">                                Color.White</span><br><span class="line">                            )</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, modifier = Modifier.clickable &#123; &#125;</span><br><span class="line">                )</span><br><span class="line">                ListItem(</span><br><span class="line">                    text = &#123;</span><br><span class="line">                        Text(text = <span class="string">"wechat"</span>)</span><br><span class="line">                    &#125;,</span><br><span class="line">                    icon = &#123;</span><br><span class="line">                        Surface(</span><br><span class="line">                            shape = CircleShape,</span><br><span class="line">                            color = Color(<span class="number">0xFF181717</span>)</span><br><span class="line">                        ) &#123;</span><br><span class="line">                            Icon(</span><br><span class="line">                                painterResource(id = R.drawable.ic_wechat),</span><br><span class="line">                                <span class="literal">null</span>,</span><br><span class="line">                                Modifier.padding(<span class="number">4</span>.dp),</span><br><span class="line">                                Color.White</span><br><span class="line">                            )</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, modifier = Modifier.clickable &#123; &#125;</span><br><span class="line">                )</span><br><span class="line">                ListItem(</span><br><span class="line">                    text = &#123;</span><br><span class="line">                        Text(text = <span class="string">"twitter"</span>)</span><br><span class="line">                    &#125;,</span><br><span class="line">                    icon = &#123;</span><br><span class="line">                        Surface(</span><br><span class="line">                            shape = CircleShape,</span><br><span class="line">                            color = Color(<span class="number">0xFF181717</span>)</span><br><span class="line">                        ) &#123;</span><br><span class="line">                            Icon(</span><br><span class="line">                                painterResource(id = R.drawable.ic_twitter),</span><br><span class="line">                                <span class="literal">null</span>,</span><br><span class="line">                                Modifier.padding(<span class="number">4</span>.dp),</span><br><span class="line">                                Color.White</span><br><span class="line">                            )</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, modifier = Modifier.clickable &#123; &#125;</span><br><span class="line">                )</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        sheetState = state</span><br><span class="line">    ) &#123;</span><br><span class="line">        Column(</span><br><span class="line">            Modifier</span><br><span class="line">                .fillMaxSize()</span><br><span class="line">                .padding(<span class="number">16</span>.dp),</span><br><span class="line">            horizontalAlignment = Alignment.CenterHorizontally</span><br><span class="line">        ) &#123;</span><br><span class="line">            Button(onClick = &#123;</span><br><span class="line">                scope.launch &#123;</span><br><span class="line">                    state.show()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;) &#123;</span><br><span class="line">                Text(text = <span class="string">"分享"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回键 处理  ModalBottomSheet 收回</span></span><br><span class="line">    BackHandler(</span><br><span class="line">        enabled = (state.currentValue == ModalBottomSheetValue.HalfExpanded ||</span><br><span class="line">                state.currentValue == ModalBottomSheetValue.Expanded),</span><br><span class="line">        onBack = &#123;</span><br><span class="line">            scope.launch &#123;</span><br><span class="line">                state.hide()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="收回-modalbottomsheet"> 收回 ModalBottomSheet</span></h3><p>一般情况下，ModalBottomSheet 无法自动处理按下返回键就收起，所以我们可以用 BackHandler 来处理<br>在 ModalBottomSheet 后添加代码:</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">BackHandler(</span><br><span class="line">    enabled = (state.currentValue == ModalBottomSheetValue.HalfExpanded</span><br><span class="line">            || state.currentValue == ModalBottomSheetValue.Expanded),</span><br><span class="line">    onBack = &#123;</span><br><span class="line">        scope.launch&#123;</span><br><span class="line">            state.hide()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3><span id="设置动画时间"> 设置动画时间</span></h3><p>ModalSheetLayout 默认用 state.show() 或者 state.hidden() 来弹出和收回<br>我们可以通过这样的方式来自定义动画时间:</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">state.animateTo(ModalBottomSheetValue.Hidden, tween(<span class="number">1000</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;jetpack-compose学习-modalbottomsheetlayout-底部弹出布局&quot;&gt; Jetpack Compose学习 -------- ModalBottomSheetLayout 底部弹出布局&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;sp
      
    
    </summary>
    
      <category term="android" scheme="http://xue12311.github.io/categories/android/"/>
    
      <category term="Jetpack" scheme="http://xue12311.github.io/categories/android/Jetpack/"/>
    
    
      <category term="android" scheme="http://xue12311.github.io/tags/android/"/>
    
      <category term="Jetpack Compose" scheme="http://xue12311.github.io/tags/Jetpack-Compose/"/>
    
  </entry>
  
  <entry>
    <title>Jetpack Compose学习  BottomNavigation</title>
    <link href="http://xue12311.github.io/2021/05/27/Jetpack%20Compose/Jetpack%20Compose%20BottomNavigation/"/>
    <id>http://xue12311.github.io/2021/05/27/Jetpack Compose/Jetpack Compose BottomNavigation/</id>
    <published>2021-05-27T02:35:17.000Z</published>
    <updated>2021-05-27T14:14:41.879Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="jetpack-compose学习-bottomnavigation-底部导航栏"> Jetpack Compose学习 -------- BottomNavigation 底部导航栏</span></h2><h3><span id="bottomnavigation-底部导航栏-基本使用"> BottomNavigation  底部导航栏 基本使用</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">ComposableSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> selectedItem <span class="keyword">by</span> remember &#123;</span><br><span class="line">        mutableStateOf(<span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">val</span> list_name = listOf(<span class="string">"主页"</span>, <span class="string">"喜爱"</span>, <span class="string">"设置"</span>)</span><br><span class="line">    <span class="keyword">val</span> list_icon = listOf(Icons.Filled.Home, Icons.Filled.Favorite, Icons.Filled.Settings)</span><br><span class="line">    Scaffold(</span><br><span class="line">        topBar = &#123;</span><br><span class="line">            <span class="comment">//顶部导航栏</span></span><br><span class="line">            TopAppBar(</span><br><span class="line">                title = &#123;</span><br><span class="line">                    Text(text = list_name.<span class="keyword">get</span>(selectedItem))</span><br><span class="line">                &#125;,</span><br><span class="line">                navigationIcon = &#123;</span><br><span class="line">                    IconButton(onClick = &#123;&#125;) &#123;</span><br><span class="line">                        Icon(Icons.Filled.ArrowBack, <span class="literal">null</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            )</span><br><span class="line">        &#125;,</span><br><span class="line">        bottomBar = &#123;</span><br><span class="line">            BottomNavigation &#123;</span><br><span class="line">                list_name.forEachIndexed &#123; index, item -&gt;</span><br><span class="line">                    BottomNavigationItem(</span><br><span class="line">                        selected = selectedItem == index,</span><br><span class="line">                        onClick = &#123; selectedItem = index &#125;,</span><br><span class="line">                        icon = &#123;</span><br><span class="line">                            Icon(</span><br><span class="line">                                imageVector = list_icon[index],</span><br><span class="line">                                contentDescription = <span class="literal">null</span>,</span><br><span class="line">                            )</span><br><span class="line">                        &#125;, label = &#123;</span><br><span class="line">                            Text(text = item)</span><br><span class="line">                        &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ) &#123;</span><br><span class="line">        Text(</span><br><span class="line">            text = list_name[selectedItem],</span><br><span class="line">            Modifier</span><br><span class="line">                .fillMaxSize()</span><br><span class="line">                .wrapContentSize(Alignment.Center)</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;jetpack-compose学习-bottomnavigation-底部导航栏&quot;&gt; Jetpack Compose学习 -------- BottomNavigation 底部导航栏&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;bottomn
      
    
    </summary>
    
      <category term="android" scheme="http://xue12311.github.io/categories/android/"/>
    
      <category term="Jetpack" scheme="http://xue12311.github.io/categories/android/Jetpack/"/>
    
    
      <category term="android" scheme="http://xue12311.github.io/tags/android/"/>
    
      <category term="Jetpack Compose" scheme="http://xue12311.github.io/tags/Jetpack-Compose/"/>
    
  </entry>
  
  <entry>
    <title>Jetpack Compose学习  Surface</title>
    <link href="http://xue12311.github.io/2021/05/26/Jetpack%20Compose/Jetpack%20Compose%20Surface/"/>
    <id>http://xue12311.github.io/2021/05/26/Jetpack Compose/Jetpack Compose Surface/</id>
    <published>2021-05-26T09:45:26.000Z</published>
    <updated>2021-05-27T00:04:17.138Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="jetpack-compose学习-surface"> Jetpack Compose学习 -------- Surface</span></h2><h3><span id="用-surface-实现-card-的效果"> 用 Surface 实现 Card 的效果</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">ComposableSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">    Surface(</span><br><span class="line">        <span class="comment">//设置形状</span></span><br><span class="line">        shape = RoundedCornerShape(<span class="number">10</span>.dp),</span><br><span class="line">        <span class="comment">// 设置阴影</span></span><br><span class="line">        elevation = <span class="number">10</span>.dp,</span><br><span class="line">        modifier = Modifier</span><br><span class="line">            .fillMaxWidth()</span><br><span class="line">            <span class="comment">// 外边距</span></span><br><span class="line">            .padding(<span class="number">15</span>.dp)</span><br><span class="line">            .clickable &#123; &#125;</span><br><span class="line">    ) &#123;</span><br><span class="line">        Column(</span><br><span class="line">            <span class="comment">// 内边距</span></span><br><span class="line">            Modifier.padding(<span class="number">15</span>.dp)</span><br><span class="line">        ) &#123;</span><br><span class="line">            Text(</span><br><span class="line">                buildAnnotatedString &#123;</span><br><span class="line">                append(<span class="string">"welcome to "</span>)</span><br><span class="line">                withStyle(</span><br><span class="line">                    style = SpanStyle(</span><br><span class="line">                        color = Color(<span class="number">0xFF4552B8</span>),</span><br><span class="line">                        fontWeight = FontWeight.W900,</span><br><span class="line">                    )</span><br><span class="line">                ) &#123;</span><br><span class="line">                    append(<span class="string">"Jetpack Compose Playground"</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            Text(</span><br><span class="line">                buildAnnotatedString &#123;</span><br><span class="line">                append(<span class="string">"Now you are in the "</span>)</span><br><span class="line">                withStyle(</span><br><span class="line">                    style = SpanStyle(</span><br><span class="line">                        fontWeight = FontWeight.W900,</span><br><span class="line">                    )</span><br><span class="line">                ) &#123;</span><br><span class="line">                    append(<span class="string">"Card"</span>)</span><br><span class="line">                &#125;</span><br><span class="line">                append(<span class="string">" section"</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;jetpack-compose学习-surface&quot;&gt; Jetpack Compose学习 -------- Surface&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;用-surface-实现-card-的效果&quot;&gt; 用 Surface 实现 
      
    
    </summary>
    
      <category term="android" scheme="http://xue12311.github.io/categories/android/"/>
    
      <category term="Jetpack" scheme="http://xue12311.github.io/categories/android/Jetpack/"/>
    
    
      <category term="android" scheme="http://xue12311.github.io/tags/android/"/>
    
      <category term="Jetpack Compose" scheme="http://xue12311.github.io/tags/Jetpack-Compose/"/>
    
  </entry>
  
  <entry>
    <title>Jetpack Compose学习  Scaffold</title>
    <link href="http://xue12311.github.io/2021/05/26/Jetpack%20Compose/Jetpack%20Compose%20Scaffold/"/>
    <id>http://xue12311.github.io/2021/05/26/Jetpack Compose/Jetpack Compose Scaffold/</id>
    <published>2021-05-26T08:26:25.000Z</published>
    <updated>2021-05-27T00:04:17.129Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="jetpack-compose学习-scaffold"> Jetpack Compose学习 -------- Scaffold</span></h2><h3><span id="scaffold-基本使用"> Scaffold 基本使用</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">ScaffoldDemo</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> materialBlue700 = Color(<span class="number">0xFF1976D2</span>)</span><br><span class="line">    <span class="comment">//设置抽屉的打开状态</span></span><br><span class="line">    <span class="keyword">val</span> scaffoldState = rememberScaffoldState(</span><br><span class="line">        rememberDrawerState(initialValue = DrawerValue.Closed)</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">val</span> scope = rememberCoroutineScope()</span><br><span class="line">    Scaffold(</span><br><span class="line">        scaffoldState = scaffoldState,</span><br><span class="line">        <span class="comment">//顶部导航栏</span></span><br><span class="line">        topBar = &#123;</span><br><span class="line">            TopAppBar(</span><br><span class="line">                title = &#123;</span><br><span class="line">                    Text(text = <span class="string">"标题"</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                backgroundColor = materialBlue700,</span><br><span class="line">            )</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//悬浮按钮</span></span><br><span class="line">        floatingActionButton = &#123;</span><br><span class="line">            FloatingActionButton(onClick = &#123;</span><br><span class="line">                scope.launch &#123;</span><br><span class="line">                    <span class="keyword">if</span> (scaffoldState.drawerState.isClosed) &#123;</span><br><span class="line">                        scaffoldState.drawerState.<span class="keyword">open</span>()</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        scaffoldState.drawerState.close()</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;) &#123;</span><br><span class="line">                Text(<span class="string">"X"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//悬浮按钮的位置</span></span><br><span class="line">        floatingActionButtonPosition = FabPosition.End,</span><br><span class="line">        <span class="comment">//抽屉内容</span></span><br><span class="line">        drawerContent = &#123;</span><br><span class="line">            Text(text = <span class="string">"drawerContent"</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//内容</span></span><br><span class="line">        content = &#123;</span><br><span class="line">            Text(<span class="string">"BodyContent"</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//底部导航栏</span></span><br><span class="line">        bottomBar = &#123;</span><br><span class="line">            BottomAppBar(</span><br><span class="line">                backgroundColor = materialBlue700</span><br><span class="line">            ) &#123;</span><br><span class="line">                Text(text = <span class="string">"BottomAppBar"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;jetpack-compose学习-scaffold&quot;&gt; Jetpack Compose学习 -------- Scaffold&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;scaffold-基本使用&quot;&gt; Scaffold 基本使用&lt;/span
      
    
    </summary>
    
      <category term="android" scheme="http://xue12311.github.io/categories/android/"/>
    
      <category term="Jetpack" scheme="http://xue12311.github.io/categories/android/Jetpack/"/>
    
    
      <category term="android" scheme="http://xue12311.github.io/tags/android/"/>
    
      <category term="Jetpack Compose" scheme="http://xue12311.github.io/tags/Jetpack-Compose/"/>
    
  </entry>
  
  <entry>
    <title>Jetpack Compose学习  Slider</title>
    <link href="http://xue12311.github.io/2021/05/26/Jetpack%20Compose/Jetpack%20Compose%20Slider/"/>
    <id>http://xue12311.github.io/2021/05/26/Jetpack Compose/Jetpack Compose Slider/</id>
    <published>2021-05-26T07:37:22.000Z</published>
    <updated>2021-05-27T00:04:17.131Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="jetpack-compose学习-slider-拖动条"> Jetpack Compose学习 -------- Slider 拖动条</span></h2><h3><span id="slider-拖动条-基本使用"> Slider 拖动条 基本使用</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    <span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">SliderDemo</span><span class="params">()</span></span> &#123;</span><br><span class="line">    Column(Modifier.padding(<span class="number">10</span>.dp)) &#123;</span><br><span class="line">        <span class="keyword">val</span> sliderPosition = remember &#123;</span><br><span class="line">            mutableStateOf(<span class="number">0f</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        Slider(value = sliderPosition.value, onValueChange = &#123;</span><br><span class="line">            sliderPosition.value = it</span><br><span class="line">        &#125;)</span><br><span class="line">        Spacer(modifier = Modifier.height(<span class="number">5</span>.dp))</span><br><span class="line">        Text(<span class="string">"当前进度: <span class="subst">$&#123;sliderPosition.value.toString()&#125;</span>"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line">   <span class="function"><span class="keyword">fun</span> <span class="title">ComposableSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">       <span class="keyword">val</span> sliderPosition = remember &#123;</span><br><span class="line">           mutableStateOf(<span class="number">0f</span>)</span><br><span class="line">       &#125;</span><br><span class="line">       Slider(</span><br><span class="line">           value = sliderPosition.value,</span><br><span class="line">           colors = SliderDefaults.colors(</span><br><span class="line">               <span class="comment">//圆圈的颜色</span></span><br><span class="line">               thumbColor = Color.White,</span><br><span class="line">               <span class="comment">//滑条颜色 (注 : 滑条默认颜色:inactiveTrackColor  默认是 与 activeTrackColor 一样 设置了 0.24f 透明度)</span></span><br><span class="line">               activeTrackColor = Color(<span class="number">0xFF0079D3</span>)</span><br><span class="line">           ),</span><br><span class="line">           onValueChange = &#123;</span><br><span class="line">               sliderPosition.value = it</span><br><span class="line">           &#125;</span><br><span class="line">       )</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;jetpack-compose学习-slider-拖动条&quot;&gt; Jetpack Compose学习 -------- Slider 拖动条&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;slider-拖动条-基本使用&quot;&gt; Slider 拖动条 基本
      
    
    </summary>
    
      <category term="android" scheme="http://xue12311.github.io/categories/android/"/>
    
      <category term="Jetpack" scheme="http://xue12311.github.io/categories/android/Jetpack/"/>
    
    
      <category term="android" scheme="http://xue12311.github.io/tags/android/"/>
    
      <category term="Jetpack Compose" scheme="http://xue12311.github.io/tags/Jetpack-Compose/"/>
    
  </entry>
  
  <entry>
    <title>Jetpack Compose学习  Snackbar</title>
    <link href="http://xue12311.github.io/2021/05/26/Jetpack%20Compose/Jetpack%20Compose%20Snackbar/"/>
    <id>http://xue12311.github.io/2021/05/26/Jetpack Compose/Jetpack Compose Snackbar/</id>
    <published>2021-05-26T07:28:38.000Z</published>
    <updated>2021-05-27T00:04:17.135Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="jetpack-compose学习-snackbar"> Jetpack Compose学习 -------- Snackbar</span></h2><h3><span id="snackbar-基本使用"> Snackbar 基本使用</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">SnackbarDemo</span><span class="params">()</span></span> &#123;</span><br><span class="line">    Column &#123;</span><br><span class="line">        <span class="keyword">val</span> snackbarVisibilityState = remember &#123;</span><br><span class="line">            mutableStateOf(<span class="literal">false</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        Button(</span><br><span class="line">            onClick = &#123; snackbarVisibilityState.value = !snackbarVisibilityState.value &#125;</span><br><span class="line">        ) &#123;</span><br><span class="line">            <span class="keyword">if</span> (snackbarVisibilityState.value) &#123;</span><br><span class="line">                Text(<span class="string">"隐藏 Snackbar"</span>)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Text(<span class="string">"显示 Snackbar"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (snackbarVisibilityState.value) &#123;</span><br><span class="line">            Snackbar(</span><br><span class="line">                action = &#123;</span><br><span class="line">                    Button(onClick = &#123;&#125;) &#123;</span><br><span class="line">                        Text(text = <span class="string">"MyAction"</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                modifier = Modifier.padding(<span class="number">10</span>.dp)</span><br><span class="line">            ) &#123;</span><br><span class="line">                Text(<span class="string">"This is a snackbar!"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;jetpack-compose学习-snackbar&quot;&gt; Jetpack Compose学习 -------- Snackbar&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;snackbar-基本使用&quot;&gt; Snackbar 基本使用&lt;/span
      
    
    </summary>
    
      <category term="android" scheme="http://xue12311.github.io/categories/android/"/>
    
      <category term="Jetpack" scheme="http://xue12311.github.io/categories/android/Jetpack/"/>
    
    
      <category term="android" scheme="http://xue12311.github.io/tags/android/"/>
    
      <category term="Jetpack Compose" scheme="http://xue12311.github.io/tags/Jetpack-Compose/"/>
    
  </entry>
  
  <entry>
    <title>Jetpack Compose学习  TopAppBar</title>
    <link href="http://xue12311.github.io/2021/05/26/Jetpack%20Compose/Jetpack%20Compose%20TopAppBar/"/>
    <id>http://xue12311.github.io/2021/05/26/Jetpack Compose/Jetpack Compose TopAppBar/</id>
    <published>2021-05-26T07:05:57.000Z</published>
    <updated>2021-05-27T00:04:17.150Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="jetpack-compose学习-topappbar-标题"> Jetpack Compose学习 -------- TopAppBar 标题</span></h2><h3><span id="topappbar-标题-基本使用"> TopAppBar 标题 基本使用</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">TopAppBarSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">    Column &#123;</span><br><span class="line">        TopAppBar(</span><br><span class="line">            elevation = <span class="number">4</span>.dp,</span><br><span class="line">            title = &#123;</span><br><span class="line">                Text(<span class="string">"标题内容"</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            backgroundColor = MaterialTheme.colors.primarySurface,</span><br><span class="line">            navigationIcon = &#123;</span><br><span class="line">                IconButton(onClick = &#123; &#125;) &#123;</span><br><span class="line">                    Icon(imageVector = Icons.Filled.ArrowBack, contentDescription = <span class="string">"返回"</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            actions = &#123;</span><br><span class="line">                IconButton(onClick = &#123;&#125;) &#123;</span><br><span class="line">                    Icon(imageVector = Icons.Filled.Share, contentDescription = <span class="string">"分享"</span>)</span><br><span class="line">                &#125;</span><br><span class="line">                IconButton(onClick = &#123;&#125;) &#123;</span><br><span class="line">                    Icon(imageVector = Icons.Filled.Settings, contentDescription = <span class="string">"设置"</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">        Text(text = <span class="string">"Hello World"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;jetpack-compose学习-topappbar-标题&quot;&gt; Jetpack Compose学习 -------- TopAppBar 标题&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;topappbar-标题-基本使用&quot;&gt; TopAppB
      
    
    </summary>
    
      <category term="android" scheme="http://xue12311.github.io/categories/android/"/>
    
      <category term="Jetpack" scheme="http://xue12311.github.io/categories/android/Jetpack/"/>
    
    
      <category term="android" scheme="http://xue12311.github.io/tags/android/"/>
    
      <category term="Jetpack Compose" scheme="http://xue12311.github.io/tags/Jetpack-Compose/"/>
    
  </entry>
  
  <entry>
    <title>Jetpack Compose学习  Switch</title>
    <link href="http://xue12311.github.io/2021/05/26/Jetpack%20Compose/Jetpack%20Compose%20Switch/"/>
    <id>http://xue12311.github.io/2021/05/26/Jetpack Compose/Jetpack Compose Switch/</id>
    <published>2021-05-26T07:05:22.000Z</published>
    <updated>2021-05-27T00:04:17.142Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="jetpack-compose学习-switch-开关"> Jetpack Compose学习 -------- Switch 开关</span></h2><h3><span id="switch-开关-基本使用"> Switch 开关 基本使用</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">SwitchSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> checkedState = remember &#123;</span><br><span class="line">        mutableStateOf(<span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    Switch(checked = checkedState.value,</span><br><span class="line">        onCheckedChange = &#123;</span><br><span class="line">            checkedState.value = it</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;jetpack-compose学习-switch-开关&quot;&gt; Jetpack Compose学习 -------- Switch 开关&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;switch-开关-基本使用&quot;&gt; Switch 开关 基本使用&lt;/
      
    
    </summary>
    
      <category term="android" scheme="http://xue12311.github.io/categories/android/"/>
    
      <category term="Jetpack" scheme="http://xue12311.github.io/categories/android/Jetpack/"/>
    
    
      <category term="android" scheme="http://xue12311.github.io/tags/android/"/>
    
      <category term="Jetpack Compose" scheme="http://xue12311.github.io/tags/Jetpack-Compose/"/>
    
  </entry>
  
  <entry>
    <title>Jetpack Compose学习  RadioButton</title>
    <link href="http://xue12311.github.io/2021/05/26/Jetpack%20Compose/Jetpack%20Compose%20RadioButton/"/>
    <id>http://xue12311.github.io/2021/05/26/Jetpack Compose/Jetpack Compose RadioButton/</id>
    <published>2021-05-26T06:36:21.000Z</published>
    <updated>2021-05-27T00:04:17.120Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="jetpack-compose学习-radiobutton-单选按钮"> Jetpack Compose学习 -------- RadioButton 单选按钮</span></h2><h3><span id="radiobutton-单选按钮-基本使用"> RadioButton 单选按钮 基本使用</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">RadioButtonSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> radioOptions = listOf&lt;String&gt;(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>)</span><br><span class="line">    <span class="keyword">val</span> (selectedOption, onOptionSelected) = remember &#123;</span><br><span class="line">        mutableStateOf(radioOptions[<span class="number">1</span>])</span><br><span class="line">    &#125;</span><br><span class="line">    Column &#123;</span><br><span class="line">        radioOptions.forEach &#123; text -&gt;</span><br><span class="line">            Row(</span><br><span class="line">                Modifier</span><br><span class="line">                    .fillMaxWidth()</span><br><span class="line">                    .selectable(</span><br><span class="line">                        selected = text == selectedOption,</span><br><span class="line">                        onClick = &#123;</span><br><span class="line">                            onOptionSelected(text)</span><br><span class="line">                        &#125;</span><br><span class="line">                    )</span><br><span class="line">                    .padding(horizontal = <span class="number">16</span>.dp)</span><br><span class="line">            ) &#123;</span><br><span class="line">                RadioButton(</span><br><span class="line">                    selected = (selectedOption == text),</span><br><span class="line">                    onClick = &#123;</span><br><span class="line">                        onOptionSelected(text)</span><br><span class="line">                    &#125;</span><br><span class="line">                )</span><br><span class="line">                Text(</span><br><span class="line">                    text = text,</span><br><span class="line">                    style = MaterialTheme.typography.body1.merge(),</span><br><span class="line">                    modifier = Modifier.padding(<span class="number">16</span>.dp)</span><br><span class="line">                )</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;jetpack-compose学习-radiobutton-单选按钮&quot;&gt; Jetpack Compose学习 -------- RadioButton 单选按钮&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;radiobutton-单选按钮-基本
      
    
    </summary>
    
      <category term="android" scheme="http://xue12311.github.io/categories/android/"/>
    
      <category term="Jetpack" scheme="http://xue12311.github.io/categories/android/Jetpack/"/>
    
    
      <category term="android" scheme="http://xue12311.github.io/tags/android/"/>
    
      <category term="Jetpack Compose" scheme="http://xue12311.github.io/tags/Jetpack-Compose/"/>
    
  </entry>
  
  <entry>
    <title>Jetpack Compose学习  ModalDrawerLayout</title>
    <link href="http://xue12311.github.io/2021/05/26/Jetpack%20Compose/Jetpack%20Compose%20ModalDrawerLayout/"/>
    <id>http://xue12311.github.io/2021/05/26/Jetpack Compose/Jetpack Compose ModalDrawerLayout/</id>
    <published>2021-05-26T06:20:55.000Z</published>
    <updated>2021-05-27T00:04:17.118Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="jetpack-compose学习-modaldrawerlayout-导航抽屉"> Jetpack Compose学习 -------- ModalDrawerLayout 导航抽屉</span></h2><h3><span id="modaldrawerlayout-导航抽屉-基本使用"> ModalDrawerLayout 导航抽屉 基本使用</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">ModalDrawerLayoutSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> drawerState = rememberDrawerState(initialValue = DrawerValue.Closed)</span><br><span class="line">    <span class="keyword">val</span> scope = rememberCoroutineScope()</span><br><span class="line">    ModalDrawer(</span><br><span class="line">        drawerState = drawerState,</span><br><span class="line">        drawerContent = &#123;</span><br><span class="line">            Column &#123;</span><br><span class="line">                Text(text = <span class="string">"Text in Drawer"</span>)</span><br><span class="line">                Button(onClick = &#123;</span><br><span class="line">                    scope.launch &#123;</span><br><span class="line">                        drawerState.close()</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;) &#123;</span><br><span class="line">                    Text(text = <span class="string">"Close Drawer"</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        content = &#123;</span><br><span class="line">            Column &#123;</span><br><span class="line">                Text(text = <span class="string">"Text in Bodycontext"</span>)</span><br><span class="line">                Button(onClick = &#123;</span><br><span class="line">                    scope.launch &#123;</span><br><span class="line">                        drawerState.<span class="keyword">open</span>()</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;) &#123;</span><br><span class="line">                    Text(text = <span class="string">"Open Drawer"</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;jetpack-compose学习-modaldrawerlayout-导航抽屉&quot;&gt; Jetpack Compose学习 -------- ModalDrawerLayout 导航抽屉&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;modaldr
      
    
    </summary>
    
      <category term="android" scheme="http://xue12311.github.io/categories/android/"/>
    
      <category term="Jetpack" scheme="http://xue12311.github.io/categories/android/Jetpack/"/>
    
    
      <category term="android" scheme="http://xue12311.github.io/tags/android/"/>
    
      <category term="Jetpack Compose" scheme="http://xue12311.github.io/tags/Jetpack-Compose/"/>
    
  </entry>
  
  <entry>
    <title>Jetpack Compose学习  FloatingActionButton</title>
    <link href="http://xue12311.github.io/2021/05/26/Jetpack%20Compose/Jetpack%20Compose%20FloatingActionButton/"/>
    <id>http://xue12311.github.io/2021/05/26/Jetpack Compose/Jetpack Compose FloatingActionButton/</id>
    <published>2021-05-26T06:00:43.000Z</published>
    <updated>2021-05-27T00:04:17.110Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="jetpack-compose学习-floatingactionbutton-悬浮按钮"> Jetpack Compose学习 -------- FloatingActionButton 悬浮按钮</span></h2><h3><span id="floatingactionbutton-悬浮按钮-基本使用"> FloatingActionButton 悬浮按钮 基本使用</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">FloatingActionButtonSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">    Column(Modifier.padding(<span class="number">10</span>.dp)) &#123;</span><br><span class="line">        FloatingActionButton(</span><br><span class="line">            onClick = &#123; &#125;,</span><br><span class="line">        ) &#123;</span><br><span class="line">            Text(text = <span class="string">"悬浮按钮"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        Spacer(modifier = Modifier.height(<span class="number">30</span>.dp))</span><br><span class="line">        ExtendedFloatingActionButton(</span><br><span class="line">            text = &#123;</span><br><span class="line">                Text(text = <span class="string">"悬浮按钮"</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            icon = &#123;</span><br><span class="line">                Icon(imageVector = Icons.Filled.Favorite, contentDescription = <span class="string">"喜爱"</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            onClick = &#123;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            elevation = FloatingActionButtonDefaults.elevation(<span class="number">8</span>.dp),</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;jetpack-compose学习-floatingactionbutton-悬浮按钮&quot;&gt; Jetpack Compose学习 -------- FloatingActionButton 悬浮按钮&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;f
      
    
    </summary>
    
      <category term="android" scheme="http://xue12311.github.io/categories/android/"/>
    
      <category term="Jetpack" scheme="http://xue12311.github.io/categories/android/Jetpack/"/>
    
    
      <category term="android" scheme="http://xue12311.github.io/tags/android/"/>
    
      <category term="Jetpack Compose" scheme="http://xue12311.github.io/tags/Jetpack-Compose/"/>
    
  </entry>
  
  <entry>
    <title>Jetpack Compose学习  LinearProgressIndicator</title>
    <link href="http://xue12311.github.io/2021/05/26/Jetpack%20Compose/Jetpack%20Compose%20LinearProgressIndicator/"/>
    <id>http://xue12311.github.io/2021/05/26/Jetpack Compose/Jetpack Compose LinearProgressIndicator/</id>
    <published>2021-05-26T03:18:10.000Z</published>
    <updated>2021-05-27T00:04:17.116Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="jetpack-compose学习-linearprogressindicator-线形进度条"> Jetpack Compose学习 -------- LinearProgressIndicator 线形进度条</span></h2><h3><span id="linearprogressindicator-线形进度条-基本使用"> LinearProgressIndicator 线形进度条 基本使用</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">LinearProgressIndicatorSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> progress = remember &#123;</span><br><span class="line">        mutableStateOf(<span class="number">0.0f</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">val</span> animatedProgress = animateFloatAsState(</span><br><span class="line">        targetValue = progress.value,</span><br><span class="line">        animationSpec = ProgressIndicatorDefaults.ProgressAnimationSpec</span><br><span class="line">    ).value</span><br><span class="line">    Column(horizontalAlignment = Alignment.CenterHorizontally,modifier = Modifier.padding(<span class="number">10</span>.dp)) &#123;</span><br><span class="line">        Spacer(modifier = Modifier.height(<span class="number">30</span>.dp))</span><br><span class="line">        Text(text = <span class="string">"进度 不确定 的 线形进度条"</span>)</span><br><span class="line">        Spacer(modifier = Modifier.height(<span class="number">30</span>.dp))</span><br><span class="line">        LinearProgressIndicator()</span><br><span class="line">        Spacer(modifier = Modifier.height(<span class="number">30</span>.dp))</span><br><span class="line">        Text(text = <span class="string">"线形进度条 进度通过 点击按钮 添加"</span>)</span><br><span class="line">        Spacer(modifier = Modifier.height(<span class="number">30</span>.dp))</span><br><span class="line">        LinearProgressIndicator(progress = animatedProgress)</span><br><span class="line">        Spacer(modifier = Modifier.height(<span class="number">30</span>.dp))</span><br><span class="line">        OutlinedButton(onClick = &#123;</span><br><span class="line">            <span class="keyword">if</span> (progress.value &lt; <span class="number">1f</span>) &#123;</span><br><span class="line">                progress.value += <span class="number">0.1f</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;) &#123;</span><br><span class="line">            Text(text = <span class="string">"添加进度"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        Spacer(modifier = Modifier.height(<span class="number">30</span>.dp))</span><br><span class="line">        OutlinedButton(onClick = &#123;</span><br><span class="line">            <span class="keyword">if</span> (progress.value &gt; <span class="number">0f</span>) &#123;</span><br><span class="line">                progress.value -= <span class="number">0.1f</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;) &#123;</span><br><span class="line">            Text(text = <span class="string">"降低进度"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;jetpack-compose学习-linearprogressindicator-线形进度条&quot;&gt; Jetpack Compose学习 -------- LinearProgressIndicator 线形进度条&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;sp
      
    
    </summary>
    
      <category term="android" scheme="http://xue12311.github.io/categories/android/"/>
    
      <category term="Jetpack" scheme="http://xue12311.github.io/categories/android/Jetpack/"/>
    
    
      <category term="android" scheme="http://xue12311.github.io/tags/android/"/>
    
      <category term="Jetpack Compose" scheme="http://xue12311.github.io/tags/Jetpack-Compose/"/>
    
  </entry>
  
  <entry>
    <title>Jetpack Compose学习 TextField</title>
    <link href="http://xue12311.github.io/2021/05/25/Jetpack%20Compose/Jetpack%20Compose%20TextField/"/>
    <id>http://xue12311.github.io/2021/05/25/Jetpack Compose/Jetpack Compose TextField/</id>
    <published>2021-05-25T03:28:10.000Z</published>
    <updated>2021-05-27T14:14:41.902Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="jetpack-compose学习-textfield-输入框"> Jetpack Compose学习 -------- TextField 输入框</span></h2><h3><span id="textfield-输入框-基本使用"> TextField 输入框 基本使用</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">BaseTextFieldDemo</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> textState = rememberSaveable &#123;</span><br><span class="line">        mutableStateOf(<span class="string">""</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    Column &#123;</span><br><span class="line">        TextField(</span><br><span class="line">            <span class="comment">//文本框里的文本内容</span></span><br><span class="line">            value = textState.value,</span><br><span class="line">            <span class="comment">//文本框输入内容时候的回调</span></span><br><span class="line">            onValueChange = &#123;</span><br><span class="line">                textState.value = it</span><br><span class="line">            &#125;)</span><br><span class="line">        Text(text = <span class="string">"您输入的内容: <span class="subst">$&#123;textState.value&#125;</span>"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">ComposableSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> phone = rememberSaveable &#123;</span><br><span class="line">        mutableStateOf(<span class="string">""</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    Column &#123;</span><br><span class="line">        TextField(</span><br><span class="line">            <span class="comment">//文本框里的文本内容</span></span><br><span class="line">            value = phone.value,</span><br><span class="line">            <span class="comment">//文本框输入内容时候的回调</span></span><br><span class="line">            onValueChange = &#123;</span><br><span class="line">                phone.value = it</span><br><span class="line">            &#125;,</span><br><span class="line">            modifier = Modifier.fillMaxWidth(),</span><br><span class="line">            <span class="comment">//启用</span></span><br><span class="line">            enabled = <span class="literal">true</span>,</span><br><span class="line">            <span class="comment">//只读</span></span><br><span class="line">            readOnly = <span class="literal">false</span>,</span><br><span class="line">            label = &#123;</span><br><span class="line">                Text(text = <span class="string">"手机号码"</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">//在没有输入内容的时候显示，类似于 hint</span></span><br><span class="line">            placeholder = &#123;</span><br><span class="line">                Text(text = <span class="string">"请输入手机号码"</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">//显示在文本框左边的控件</span></span><br><span class="line">            leadingIcon = &#123;</span><br><span class="line">                Icon(Icons.Default.Phone, <span class="literal">null</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">//显示在文本框末尾的控件</span></span><br><span class="line">            trailingIcon = &#123;</span><br><span class="line">                Icon(Icons.Default.Cancel, <span class="literal">null</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">//当前文本字段 是否 为 错误的</span></span><br><span class="line">            isError = <span class="literal">false</span>,</span><br><span class="line">            <span class="comment">//形状 圆角</span></span><br><span class="line">            shape = RoundedCornerShape(<span class="number">5</span>.dp)</span><br><span class="line">        )</span><br><span class="line">        Spacer(modifier = Modifier.size(<span class="number">20</span>.dp))</span><br><span class="line">        Text(text = <span class="string">"您输入的内容: <span class="subst">$&#123;phone.value&#125;</span>"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">TextFieldDemo</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> text <span class="keyword">by</span> remember &#123; mutableStateOf(<span class="string">""</span>) &#125;</span><br><span class="line">    TextField(</span><br><span class="line">        value = text,</span><br><span class="line">        onValueChange = &#123;</span><br><span class="line">            text = it</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//单行</span></span><br><span class="line">        singleLine = <span class="literal">true</span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">ComposableSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> text <span class="keyword">by</span> remember &#123; mutableStateOf(<span class="string">""</span>) &#125;</span><br><span class="line">    TextField(</span><br><span class="line">        value = text,</span><br><span class="line">        onValueChange = &#123;</span><br><span class="line">            text = it</span><br><span class="line">        &#125;,</span><br><span class="line">        leadingIcon = &#123;</span><br><span class="line">            Icon(Icons.Filled.Search, <span class="literal">null</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">ComposableSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> text <span class="keyword">by</span> remember &#123; mutableStateOf(<span class="string">""</span>) &#125;</span><br><span class="line">    TextField(</span><br><span class="line">        value = text,</span><br><span class="line">        onValueChange = &#123;</span><br><span class="line">            text = it</span><br><span class="line">        &#125;,</span><br><span class="line">        leadingIcon = &#123;</span><br><span class="line">            Text(<span class="string">"联系人"</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="textfield-输入和修改文字"> TextField 输入和修改文字</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">//TextField 输入和修改文字</span></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">SimpleFilledTextFieldSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> text = remember &#123; mutableStateOf(<span class="string">"Hello"</span>) &#125;</span><br><span class="line">    TextField(</span><br><span class="line">        value = text.value,</span><br><span class="line">        onValueChange = &#123;</span><br><span class="line">            text.value = it</span><br><span class="line">        &#125;,</span><br><span class="line">        label = &#123;</span><br><span class="line">            Text(text = <span class="string">"Label"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//轮廓样式 输入框</span></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">SimpleOutlinedTextFieldSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> text = remember &#123;</span><br><span class="line">        mutableStateOf(<span class="string">""</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    OutlinedTextField(</span><br><span class="line">        value = text.value,</span><br><span class="line">        onValueChange = &#123;</span><br><span class="line">            text.value = it</span><br><span class="line">        &#125;,</span><br><span class="line">        label = &#123;</span><br><span class="line">            Text(text = <span class="string">"Label"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置 TextField 样式</span></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">StyledTextField</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> text = remember &#123;</span><br><span class="line">        mutableStateOf(<span class="string">"Hello\nWorld\nInvisible"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    TextField(</span><br><span class="line">        value = text.value,</span><br><span class="line">        onValueChange = &#123;</span><br><span class="line">            text.value = it</span><br><span class="line">        &#125;,</span><br><span class="line">        label = &#123;</span><br><span class="line">            Text(text = <span class="string">"Enter text"</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        maxLines = <span class="number">2</span>,</span><br><span class="line">        textStyle = TextStyle(color = Color.Blue, fontWeight = FontWeight.Bold),</span><br><span class="line">        modifier = Modifier.padding(<span class="number">20</span>.dp)</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置 TextField 格式</span></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">PasswordTextField</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> password = rememberSaveable &#123;</span><br><span class="line">        mutableStateOf(<span class="string">""</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    TextField(</span><br><span class="line">        value = password.value,</span><br><span class="line">        onValueChange = &#123;</span><br><span class="line">            password.value = it</span><br><span class="line">        &#125;,</span><br><span class="line">        label = &#123; Text(text = <span class="string">"Enter password"</span>) &#125;,</span><br><span class="line">        <span class="comment">//密码样式</span></span><br><span class="line">        visualTransformation = PasswordVisualTransformation(),</span><br><span class="line">        <span class="comment">//设置键盘选项 密码</span></span><br><span class="line">        keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Password)</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">ComposableSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> text <span class="keyword">by</span> remember &#123; mutableStateOf(<span class="string">""</span>) &#125;</span><br><span class="line">    TextField(</span><br><span class="line">        value = text,</span><br><span class="line">        onValueChange = &#123;</span><br><span class="line">            text = it</span><br><span class="line">        &#125;,</span><br><span class="line">        leadingIcon = &#123;</span><br><span class="line">            Icon(Icons.Filled.Search, <span class="literal">null</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        colors = TextFieldDefaults.textFieldColors(</span><br><span class="line">            textColor = Color(<span class="number">0xFF0079D3</span>),</span><br><span class="line">            backgroundColor = Color.Transparent</span><br><span class="line">        )</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">textFieldColors</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="comment">// 输入的文字颜色</span></span></span></span><br><span class="line"><span class="function"><span class="params">    textColor: <span class="type">Color</span> = LocalContentColor.current.copy(LocalContentAlpha.current)</span></span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 禁用 TextField 时，已有的文字颜色</span></span><br><span class="line">    disabledTextColor: Color = textColor.copy(ContentAlpha.disabled),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输入框的背景颜色，当设置为 Color.Transparent 时，将透明</span></span><br><span class="line">    backgroundColor: Color = MaterialTheme.colors.onSurface.copy(alpha = BackgroundOpacity),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输入框的光标颜色</span></span><br><span class="line">    cursorColor: Color = MaterialTheme.colors.primary,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当 TextField 的 isError 参数为 true 时，光标的颜色</span></span><br><span class="line">    errorCursorColor: Color = MaterialTheme.colors.error,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当输入框处于焦点时，底部指示器的颜色</span></span><br><span class="line">    focusedIndicatorColor: Color = MaterialTheme.colors.primary.copy(alpha = ContentAlpha.high),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当输入框不处于焦点时，底部指示器的颜色</span></span><br><span class="line">    unfocusedIndicatorColor: Color = MaterialTheme.colors.onSurface.copy(alpha = UnfocusedIndicatorLineOpacity),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 禁用 TextField 时，底部指示器的颜色</span></span><br><span class="line">    disabledIndicatorColor: Color = unfocusedIndicatorColor.copy(alpha = ContentAlpha.disabled),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当 TextField 的 isError 参数为 true 时，底部指示器的颜色</span></span><br><span class="line">    errorIndicatorColor: Color = MaterialTheme.colors.error,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// TextField 输入框前头的颜色</span></span><br><span class="line">    leadingIconColor: Color = MaterialTheme.colors.onSurface.copy(alpha = IconOpacity),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 禁用 TextField 时 TextField 输入框前头的颜色</span></span><br><span class="line">    disabledLeadingIconColor: Color = leadingIconColor.copy(alpha = ContentAlpha.disabled),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当 TextField 的 isError 参数为 true 时 TextField 输入框前头的颜色</span></span><br><span class="line">    errorLeadingIconColor: Color = leadingIconColor,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// TextField 输入框尾部的颜色</span></span><br><span class="line">    trailingIconColor: Color = MaterialTheme.colors.onSurface.copy(alpha = IconOpacity),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 禁用 TextField 时 TextField 输入框尾部的颜色</span></span><br><span class="line">    disabledTrailingIconColor: Color = trailingIconColor.copy(alpha = ContentAlpha.disabled),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当 TextField 的 isError 参数为 true 时 TextField 输入框尾部的颜色</span></span><br><span class="line">    errorTrailingIconColor: Color = MaterialTheme.colors.error,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当输入框处于焦点时，Label 的颜色</span></span><br><span class="line">    focusedLabelColor: Color = MaterialTheme.colors.primary.copy(alpha = ContentAlpha.high),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当输入框不处于焦点时，Label 的颜色</span></span><br><span class="line">    unfocusedLabelColor: Color = MaterialTheme.colors.onSurface.copy(ContentAlpha.medium),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 禁用 TextField 时，Label 的颜色</span></span><br><span class="line">    disabledLabelColor: Color = unfocusedLabelColor.copy(ContentAlpha.disabled),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当 TextField 的 isError 参数为 true 时，Label 的颜色</span></span><br><span class="line">    errorLabelColor: Color = MaterialTheme.colors.error,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Placeholder 的颜色</span></span><br><span class="line">    placeholderColor: Color = MaterialTheme.colors.onSurface.copy(ContentAlpha.medium),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 禁用 TextField 时，placeholder 的颜色</span></span><br><span class="line">    disabledPlaceholderColor: Color = placeholderColor.copy(ContentAlpha.disabled)</span><br><span class="line">)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;jetpack-compose学习-textfield-输入框&quot;&gt; Jetpack Compose学习 -------- TextField 输入框&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;textfield-输入框-基本使用&quot;&gt; Text
      
    
    </summary>
    
      <category term="android" scheme="http://xue12311.github.io/categories/android/"/>
    
      <category term="Jetpack" scheme="http://xue12311.github.io/categories/android/Jetpack/"/>
    
    
      <category term="android" scheme="http://xue12311.github.io/tags/android/"/>
    
      <category term="Jetpack Compose" scheme="http://xue12311.github.io/tags/Jetpack-Compose/"/>
    
  </entry>
  
  <entry>
    <title>Jetpack Compose学习 Text</title>
    <link href="http://xue12311.github.io/2021/05/25/Jetpack%20Compose/Jetpack%20Compose%20Text/"/>
    <id>http://xue12311.github.io/2021/05/25/Jetpack Compose/Jetpack Compose Text/</id>
    <published>2021-05-25T03:27:10.000Z</published>
    <updated>2021-05-27T14:14:41.900Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="jetpack-compose学习-text-文本"> Jetpack Compose学习 -------- Text 文本</span></h2><h3><span id="text-文字-基本属性"> Text 文字 基本属性</span></h3><ul><li>text: 显示的文本</li><li>modifier</li><li>color: 字体颜色</li><li>fontSize: 字体大小</li><li>fontStyle: 字体样式 （比如斜体）</li><li>fontWeight: 字体样式 (比如粗体)</li><li>fontFamily: 处理字体 (比如设置宋体等)</li><li>letterSpacing: 每个字符之间的间距</li><li>textDecoration: 文本的装饰，比如TextDecoration.Underline 添加下划线，比如TextDecoration.LineThrough 中线划线</li><li>textAlign: 设置文字对齐 对齐方式</li><li>lineHeight: 设置行高</li><li>maxLines: 最大行数</li><li>overflow: 当文字溢出的时候，比如…设置显示在最后</li><li>softWrap: 声明是否应在换行符处断开文本,默认是true</li><li>onTextLayout: 在计算新的文本布局时执行的回调</li><li>style: 文本样式</li></ul><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">TextDemo</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">//垂直布局</span></span><br><span class="line">    Column() &#123;</span><br><span class="line">        <span class="comment">//显示资源中的文字</span></span><br><span class="line">        Text(stringResource(id = R.string.app_name))</span><br><span class="line">        <span class="comment">//最多显示行数 , 溢出处理</span></span><br><span class="line">        Text(</span><br><span class="line">            text = <span class="string">"你好呀陌生人，这是一个标题，不是很长，因为我想不出其他什么比较好的标题了"</span>,</span><br><span class="line">            <span class="comment">//宽度</span></span><br><span class="line">            modifier = Modifier.width(<span class="number">200</span>.dp),</span><br><span class="line">            <span class="comment">//设置 最多显示行数</span></span><br><span class="line">            maxLines = <span class="number">1</span>,</span><br><span class="line">            <span class="comment">//溢出处理 省略</span></span><br><span class="line">            overflow = TextOverflow.Ellipsis</span><br><span class="line">        )</span><br><span class="line">        <span class="comment">//文字颜色</span></span><br><span class="line">        Text(text = <span class="string">"Hello World"</span>, color = Color.Blue)</span><br><span class="line">        <span class="comment">//文字大小</span></span><br><span class="line">        Text(text = <span class="string">"Hello World"</span>, fontSize = <span class="number">30</span>.sp)</span><br><span class="line">        <span class="comment">//斜体</span></span><br><span class="line">        Text(text = <span class="string">"Hello World"</span>, fontStyle = FontStyle.Italic)</span><br><span class="line">        <span class="comment">//粗体</span></span><br><span class="line">        Text(text = <span class="string">"Hello World"</span>, fontWeight = FontWeight.Bold)</span><br><span class="line">        <span class="comment">//文字对齐 (居中)</span></span><br><span class="line">        Text(</span><br><span class="line">            text = <span class="string">"Hello World Hello World\nHello World"</span>,</span><br><span class="line">            <span class="comment">//文本的对齐方式</span></span><br><span class="line">            textAlign = TextAlign.Center</span><br><span class="line">        )</span><br><span class="line">        <span class="comment">//设置宽度与高度</span></span><br><span class="line">        Text(</span><br><span class="line">            text = <span class="string">"Hello World"</span>,</span><br><span class="line">            <span class="comment">//居中对齐</span></span><br><span class="line">            textAlign = TextAlign.Center,</span><br><span class="line">            modifier = Modifier</span><br><span class="line">                <span class="comment">//宽度</span></span><br><span class="line">                .width(<span class="number">100</span>.dp)</span><br><span class="line">                <span class="comment">//高度</span></span><br><span class="line">                .height(<span class="number">30</span>.dp)</span><br><span class="line">        )</span><br><span class="line">        <span class="comment">//字体设置</span></span><br><span class="line">        Text(text = <span class="string">"Hello World"</span>, fontFamily = FontFamily.Serif)</span><br><span class="line">        <span class="comment">//字体设置</span></span><br><span class="line">        Text(text = <span class="string">"Hello World"</span>, fontFamily = FontFamily.SansSerif)</span><br><span class="line">        <span class="comment">//自定义 fontFamily</span></span><br><span class="line">        <span class="keyword">val</span> firaSansFamily = FontFamily(</span><br><span class="line">            Font(R.font.firasans_light, FontWeight.Light),</span><br><span class="line">            Font(R.font.firasans_regular, FontWeight.Normal)</span><br><span class="line">        )</span><br><span class="line">        <span class="comment">//字体设置</span></span><br><span class="line">        Text(</span><br><span class="line">            text = <span class="string">"Hello World"</span>,</span><br><span class="line">            fontFamily = firaSansFamily,</span><br><span class="line">            fontWeight = FontWeight.Light</span><br><span class="line">        )</span><br><span class="line">        <span class="comment">//字体设置</span></span><br><span class="line">        Text(</span><br><span class="line">            text = <span class="string">"Hello World"</span>,</span><br><span class="line">            fontFamily = firaSansFamily,</span><br><span class="line">            fontWeight = FontWeight.Normal</span><br><span class="line">        )</span><br><span class="line">        <span class="comment">//文本中间绘制线</span></span><br><span class="line">        Text(</span><br><span class="line">            text = <span class="string">"Hello World"</span>,</span><br><span class="line">            style = TextStyle(textDecoration = TextDecoration.LineThrough)</span><br><span class="line">        )</span><br><span class="line">        <span class="comment">//文本下方绘制线  下划线</span></span><br><span class="line">        Text(</span><br><span class="line">            text = <span class="string">"Hello World"</span>,</span><br><span class="line">            style = TextStyle(textDecoration = TextDecoration.Underline)</span><br><span class="line">        )</span><br><span class="line">        <span class="comment">//设置多个 textDecoration</span></span><br><span class="line">        Text(</span><br><span class="line">            text = <span class="string">"Hello World"</span>,</span><br><span class="line">            style = TextStyle(</span><br><span class="line">                textDecoration =</span><br><span class="line">                TextDecoration.combine(</span><br><span class="line">                    listOf(</span><br><span class="line">                        TextDecoration.LineThrough,</span><br><span class="line">                        TextDecoration.Underline</span><br><span class="line">                    )</span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line">        )</span><br><span class="line">        <span class="comment">//设置样式</span></span><br><span class="line">        Text(text = buildAnnotatedString &#123;</span><br><span class="line">            withStyle(</span><br><span class="line">                style = SpanStyle(</span><br><span class="line">                    <span class="comment">//字体颜色</span></span><br><span class="line">                    color = Color.Blue</span><br><span class="line">                )</span><br><span class="line">            ) &#123;</span><br><span class="line">                append(<span class="string">"H"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            append(<span class="string">"ello "</span>)</span><br><span class="line">            withStyle(</span><br><span class="line">                style = SpanStyle(</span><br><span class="line">                    <span class="comment">//粗体</span></span><br><span class="line">                    fontWeight = FontWeight.Bold,</span><br><span class="line">                    <span class="comment">//字体颜色</span></span><br><span class="line">                    color = Color.Green</span><br><span class="line">                )</span><br><span class="line">            ) &#123;</span><br><span class="line">                append(<span class="string">"W"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            append(<span class="string">"orld"</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment">//设置段落样式</span></span><br><span class="line">        Text(text = buildAnnotatedString &#123;</span><br><span class="line">            withStyle(</span><br><span class="line">                style = ParagraphStyle(</span><br><span class="line">                    <span class="comment">//行高间距</span></span><br><span class="line">                    lineHeight = <span class="number">40</span>.sp</span><br><span class="line">                )</span><br><span class="line">            ) &#123;</span><br><span class="line">                withStyle(</span><br><span class="line">                    style = SpanStyle(</span><br><span class="line">                        <span class="comment">//字体颜色</span></span><br><span class="line">                        color = Color.Yellow</span><br><span class="line">                    )</span><br><span class="line">                ) &#123;</span><br><span class="line">                    append(<span class="string">"Hello\n"</span>)</span><br><span class="line">                &#125;</span><br><span class="line">                withStyle(</span><br><span class="line">                    style = SpanStyle(</span><br><span class="line">                        <span class="comment">//粗体</span></span><br><span class="line">                        fontWeight = FontWeight.Bold,</span><br><span class="line">                        <span class="comment">//字体颜色</span></span><br><span class="line">                        color = Color.Red</span><br><span class="line">                    )</span><br><span class="line">                ) &#123;</span><br><span class="line">                    append(<span class="string">"World\n"</span>)</span><br><span class="line">                &#125;</span><br><span class="line">                append(<span class="string">"Compose"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment">//设置最大行数</span></span><br><span class="line">        Text(</span><br><span class="line">            <span class="comment">//重复字符串</span></span><br><span class="line">            text = <span class="string">"Hello World "</span>.repeat(<span class="number">20</span>),</span><br><span class="line">            <span class="comment">//设置行数</span></span><br><span class="line">            maxLines = <span class="number">3</span></span><br><span class="line">        )</span><br><span class="line">        <span class="comment">//文字溢出处理</span></span><br><span class="line">        Text(</span><br><span class="line">            text = <span class="string">"Hello World"</span>.repeat(<span class="number">20</span>),</span><br><span class="line">            <span class="comment">//设置最大行数</span></span><br><span class="line">            maxLines = <span class="number">3</span>,</span><br><span class="line">            <span class="comment">//溢出处理：省略号</span></span><br><span class="line">            overflow = TextOverflow.Ellipsis</span><br><span class="line">        )</span><br><span class="line">        <span class="comment">// 将内部 Text 组件的 alpha 强调程度设置为高</span></span><br><span class="line">        <span class="comment">// 注意: MaterialTheme 已经默认将强调程度设置为 high</span></span><br><span class="line">        CompositionLocalProvider(LocalContentAlpha provides ContentAlpha.high) &#123;</span><br><span class="line">            Text(<span class="string">"这里是high强调效果"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 将内部 Text 组件的 alpha 强调程度设置为中</span></span><br><span class="line">        CompositionLocalProvider(LocalContentAlpha provides ContentAlpha.medium) &#123;</span><br><span class="line">            Text(<span class="string">"这里是medium强调效果"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 将内部 Text 组件的 alpha 强调程度设置为禁用</span></span><br><span class="line">        CompositionLocalProvider(LocalContentAlpha provides ContentAlpha.disabled) &#123;</span><br><span class="line">            Text(<span class="string">"这里是禁用后的效果"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="selectioncontainer-选择文字"> SelectionContainer 选择文字</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//选择文字</span></span><br><span class="line"><span class="comment">//默认情况下，可组合项不可选择，这意味着在默认情况下用户无法从您的应用中选择和复制文字。</span></span><br><span class="line"><span class="comment">//要启用文字选择，需要使用 SelectionContainer 可组合项封装文字元素</span></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">SelectableText</span><span class="params">()</span></span> &#123;</span><br><span class="line">    Text(text = <span class="string">"Hello World"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//DisableSelection 为可选择区域的特定部分停用选择功能</span></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">PartiallySelectableText</span><span class="params">()</span></span> &#123;</span><br><span class="line">    SelectionContainer &#123;</span><br><span class="line">        Column &#123;</span><br><span class="line">            Text(<span class="string">"This text is selectable"</span>)</span><br><span class="line">            Text(<span class="string">"This one too"</span>)</span><br><span class="line">            Text(<span class="string">"This one as well"</span>)</span><br><span class="line">            <span class="comment">//组合项来封装不可选择的部分</span></span><br><span class="line">            DisableSelection &#123;</span><br><span class="line">                Text(<span class="string">"But not this one"</span>)</span><br><span class="line">                Text(<span class="string">"Neither this one"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            Text(<span class="string">"But again, you can select this one"</span>)</span><br><span class="line">            Text(<span class="string">"And this one too"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">ComposableSample</span><span class="params">()</span></span> &#123;</span><br><span class="line">    Text(</span><br><span class="line">        text = <span class="string">"Hello World Hello World Hello World"</span>,</span><br><span class="line">        modifier = Modifier.clickable(</span><br><span class="line">            onClick = &#123;</span><br><span class="line">                Log.d(<span class="string">"onClick"</span>, <span class="string">"你点击了此文本"</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">//取消点击波纹</span></span><br><span class="line">            indication = <span class="literal">null</span>,</span><br><span class="line">            <span class="comment">//取消点击波纹</span></span><br><span class="line">            interactionSource = MutableInteractionSource()</span><br><span class="line">        )</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//clickable 获取点击文字的位置</span></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">SimpleClickableText</span><span class="params">()</span></span> &#123;</span><br><span class="line">    ClickableText(</span><br><span class="line">        text = AnnotatedString(<span class="string">"Click Me"</span>),</span><br><span class="line">        onClick = &#123; offset -&gt;</span><br><span class="line">            Log.d(<span class="string">"ClickableText"</span>, <span class="string">"<span class="subst">$&#123;offset&#125;</span> -th character is clicked."</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//点击注解</span></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">AnnotatedClickableText</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> annotatedText = buildAnnotatedString &#123;</span><br><span class="line">        append(<span class="string">"Click "</span>)</span><br><span class="line">        <span class="comment">//我们将此URL注释附加到以下内容，直到调用`pop（）`为止</span></span><br><span class="line">        pushStringAnnotation(</span><br><span class="line">            tag = <span class="string">"URL"</span>,</span><br><span class="line">            <span class="keyword">annotation</span> = <span class="string">"https://developer.android.com"</span></span><br><span class="line">        )</span><br><span class="line">        withStyle(</span><br><span class="line">            style = SpanStyle(</span><br><span class="line">                <span class="comment">//字体颜色</span></span><br><span class="line">                color = Color.Red,</span><br><span class="line">                <span class="comment">//粗体</span></span><br><span class="line">                fontWeight = FontWeight.Bold</span><br><span class="line">            )</span><br><span class="line">        ) &#123;</span><br><span class="line">            append(<span class="string">"here"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        pop()</span><br><span class="line">    &#125;</span><br><span class="line">    ClickableText(</span><br><span class="line">        text = annotatedText,</span><br><span class="line">        onClick = &#123; offset -&gt;</span><br><span class="line">            <span class="comment">//判断点击的位置是否是 url 注解中</span></span><br><span class="line">            annotatedText.getStringAnnotations(</span><br><span class="line">                tag = <span class="string">"URL"</span>,</span><br><span class="line">                start = offset,</span><br><span class="line">                end = offset</span><br><span class="line">            ).firstOrNull()?.let &#123; <span class="keyword">annotation</span> -&gt;</span><br><span class="line">                Log.d(<span class="string">"Clicked URL"</span>, <span class="keyword">annotation</span>.item)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;jetpack-compose学习-text-文本&quot;&gt; Jetpack Compose学习 -------- Text 文本&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;text-文字-基本属性&quot;&gt; Text 文字 基本属性&lt;/span&gt;&lt;/h
      
    
    </summary>
    
      <category term="android" scheme="http://xue12311.github.io/categories/android/"/>
    
      <category term="Jetpack" scheme="http://xue12311.github.io/categories/android/Jetpack/"/>
    
    
      <category term="android" scheme="http://xue12311.github.io/tags/android/"/>
    
      <category term="Jetpack Compose" scheme="http://xue12311.github.io/tags/Jetpack-Compose/"/>
    
  </entry>
  
  <entry>
    <title>Jetpack Compose学习  Shape</title>
    <link href="http://xue12311.github.io/2021/05/25/Jetpack%20Compose/Jetpack%20Compose%20Shape/"/>
    <id>http://xue12311.github.io/2021/05/25/Jetpack Compose/Jetpack Compose Shape/</id>
    <published>2021-05-25T03:26:10.000Z</published>
    <updated>2021-05-25T13:02:57.162Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="jetpack-compose学习-shape-形状"> Jetpack Compose学习 -------- Shape 形状</span></h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"> <span class="function"><span class="keyword">fun</span> <span class="title">ShapeDemo</span><span class="params">()</span></span> &#123;</span><br><span class="line">     Column(</span><br><span class="line">         Modifier</span><br><span class="line">             .fillMaxWidth() </span><br><span class="line">     ) &#123;</span><br><span class="line">         <span class="comment">//RectangleShape 矩形形状</span></span><br><span class="line">         ExampleBox(shape = RectangleShape)</span><br><span class="line">         <span class="comment">//CircleShape 圆圈形状</span></span><br><span class="line">         ExampleBox(shape = CircleShape)</span><br><span class="line">         <span class="comment">//RoundedCornerShape 圆角形状</span></span><br><span class="line">         ExampleBox(shape = RoundedCornerShape(<span class="number">10</span>.dp))</span><br><span class="line">         <span class="comment">//CutCornerShape 切角形状</span></span><br><span class="line">         ExampleBox(shape = CutCornerShape(<span class="number">10</span>.dp))</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Composable</span></span><br><span class="line"> <span class="function"><span class="keyword">fun</span> <span class="title">ExampleBox</span><span class="params">(shape: <span class="type">Shape</span>)</span></span> &#123;</span><br><span class="line">     Column(</span><br><span class="line">         Modifier</span><br><span class="line">             .fillMaxWidth()</span><br><span class="line">             .padding(<span class="number">10</span>.dp)</span><br><span class="line">             .wrapContentSize(Alignment.Center)</span><br><span class="line">     )</span><br><span class="line">     &#123;</span><br><span class="line">         Box(</span><br><span class="line">             modifier = Modifier</span><br><span class="line">                 .size(<span class="number">100</span>.dp)</span><br><span class="line">                 .clip(shape)</span><br><span class="line">                 .background(Color.Blue)</span><br><span class="line">         )</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;jetpack-compose学习-shape-形状&quot;&gt; Jetpack Compose学习 -------- Shape 形状&lt;/span&gt;&lt;/h2&gt;
&lt;figure class=&quot;highlight kotlin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c
      
    
    </summary>
    
      <category term="android" scheme="http://xue12311.github.io/categories/android/"/>
    
      <category term="Jetpack" scheme="http://xue12311.github.io/categories/android/Jetpack/"/>
    
    
      <category term="android" scheme="http://xue12311.github.io/tags/android/"/>
    
      <category term="Jetpack Compose" scheme="http://xue12311.github.io/tags/Jetpack-Compose/"/>
    
  </entry>
  
  <entry>
    <title>Jetpack Compose学习  Modifier</title>
    <link href="http://xue12311.github.io/2021/05/25/Jetpack%20Compose/Jetpack%20Compose%20Modifier/"/>
    <id>http://xue12311.github.io/2021/05/25/Jetpack Compose/Jetpack Compose Modifier/</id>
    <published>2021-05-25T03:25:10.000Z</published>
    <updated>2021-05-25T13:02:43.282Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="jetpack-compose学习-modifier"> Jetpack Compose学习 -------- Modifier</span></h2><h3><span id="padding-设置各个ui的padding"> padding 设置各个UI的padding</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 给上下左右全部设置成同一个值</span></span><br><span class="line">Modifier.padding(<span class="number">10</span>.dp)</span><br><span class="line"><span class="comment">// 分别为左（开始）、上（上）、右（结束）、下（下）设值</span></span><br><span class="line">Modifier.padding(<span class="number">10</span>.dp, <span class="number">20</span>.dp, <span class="number">30</span>.dp, <span class="number">40</span>.dp)</span><br><span class="line"><span class="comment">// 分别为左右（水平）和上下（垂直）设值</span></span><br><span class="line">Modifier.padding(<span class="number">10</span>.dp, <span class="number">20</span>.dp)</span><br><span class="line"><span class="comment">//PaddingValues 与 padding 不一样</span></span><br><span class="line"><span class="comment">// 给上下左右全部设置成同一个值</span></span><br><span class="line">Modifier.padding(PaddingValues(<span class="number">10</span>.dp))</span><br><span class="line"><span class="comment">// 分别为左右（水平）和上下（垂直）设值</span></span><br><span class="line">Modifier.padding(PaddingValues(<span class="number">10</span>.dp, <span class="number">20</span>.dp))</span><br><span class="line"><span class="comment">//分别为左（开始）、上（上）、右（结束）、下（下）设值</span></span><br><span class="line">Modifier.padding(PaddingValues(<span class="number">10</span>.dp, <span class="number">20</span>.dp, <span class="number">30</span>.dp, <span class="number">40</span>.dp))</span><br></pre></td></tr></table></figure><h3><span id="fillmaxheightfillmaxwidthfillmaxsize-类似于match_parent填充整个父layout"> fillMaxHeight,fillMaxWidth,fillMaxSize 类似于match_parent,填充整个父layout</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//填充整个父Layout</span></span><br><span class="line">Modifier.fillMaxSize()</span><br><span class="line"><span class="comment">//填充整个父Layout的宽度</span></span><br><span class="line">Modifier.fillMaxWidth()</span><br><span class="line"><span class="comment">//填充整个父Layout的高度</span></span><br><span class="line">Modifier.fillMaxHeight()</span><br></pre></td></tr></table></figure><h3><span id="widthheighsize-设置content的宽度和高度"> width,heigh,size 设置Content的宽度和高度</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//设置宽度</span></span><br><span class="line">Modifier.width(<span class="number">80</span>.dp)</span><br><span class="line"><span class="comment">//设置高度</span></span><br><span class="line">Modifier.height(<span class="number">80</span>.dp)</span><br><span class="line"><span class="comment">//设置 宽度和高度</span></span><br><span class="line">Modifier.size(<span class="number">100</span>.dp)</span><br><span class="line"><span class="comment">//设置 宽度,高度</span></span><br><span class="line">Modifier.size(<span class="number">100</span>.dp, <span class="number">100</span>.dp)</span><br></pre></td></tr></table></figure><h3><span id="widthin-heightin-sizein-设置content的宽度和高度的最大值和最小值"> widthIn, heightIn, sizeIn 设置Content的宽度和高度的最大值和最小值</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//设置 最小宽度 最大宽度</span></span><br><span class="line">Modifier.widthIn(<span class="number">20</span>.dp, <span class="number">50</span>.dp)</span><br><span class="line"><span class="comment">//设置 最小高度 最大高度</span></span><br><span class="line">Modifier.heightIn(<span class="number">20</span>.dp, <span class="number">50</span>.dp)</span><br><span class="line"><span class="comment">//设置 最小宽度,最小高度,最大宽度,最大高度</span></span><br><span class="line">Modifier.sizeIn(<span class="number">20</span>.dp, <span class="number">20</span>.dp, <span class="number">50</span>.dp, <span class="number">50</span>.dp)</span><br></pre></td></tr></table></figure><h3><span id="wrapcontentheightwrapcontentwidthwrapcontentsize"> wrapContentHeight,wrapContentWidth,wrapContentSize,</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 高度 位于 顶部</span></span><br><span class="line">Modifier.wrapContentHeight(Alignment.Top)</span><br><span class="line"><span class="comment">// 高度 位于 底部</span></span><br><span class="line">Modifier.wrapContentHeight(Alignment.Bottom)</span><br><span class="line"><span class="comment">// 高度 位于 垂直居中</span></span><br><span class="line">Modifier.wrapContentHeight(Alignment.CenterVertically)</span><br><span class="line"><span class="comment">// 高度 位于 水平居中</span></span><br><span class="line">Modifier.wrapContentHeight(Alignment.CenterHorizontally)</span><br><span class="line"><span class="comment">// 宽度 位于 开始（左）</span></span><br><span class="line">Modifier.wrapContentWidth(Alignment.Start)</span><br><span class="line"><span class="comment">// 宽度 位于 结束（右）</span></span><br><span class="line">Modifier.wrapContentWidth(Alignment.End)</span><br><span class="line"><span class="comment">// 宽度 位于 水平居中</span></span><br><span class="line">Modifier.wrapContentWidth(Alignment.CenterHorizontally)</span><br><span class="line"><span class="comment">// 宽度 位于 垂直居中</span></span><br><span class="line">Modifier.wrapContentWidth(Alignment.CenterVertically)</span><br><span class="line"><span class="comment">//位置 位于 顶部 开始（左）</span></span><br><span class="line">Modifier.wrapContentSize(Alignment.TopStart)</span><br><span class="line"><span class="comment">//位置 位于 顶部 结束（右）</span></span><br><span class="line">Modifier.wrapContentSize(Alignment.TopEnd)</span><br><span class="line"><span class="comment">//位置 位于 顶部 水平居中</span></span><br><span class="line">Modifier.wrapContentSize(Alignment.TopCenter)</span><br><span class="line"><span class="comment">//位置 位于 底部 开始（左）</span></span><br><span class="line">Modifier.wrapContentSize(Alignment.BottomStart)</span><br><span class="line"><span class="comment">//位置 位于 底部 结束（右）</span></span><br><span class="line">Modifier.wrapContentSize(Alignment.BottomEnd)</span><br><span class="line"><span class="comment">//位置 位于 底部 水平居中</span></span><br><span class="line">Modifier.wrapContentSize(Alignment.BottomCenter)</span><br><span class="line"><span class="comment">//位置 位于 垂直居中 开始（左）</span></span><br><span class="line">Modifier.wrapContentSize(Alignment.CenterStart)</span><br><span class="line"><span class="comment">//位置 位于 垂直居中 结束（右）</span></span><br><span class="line">Modifier.wrapContentSize(Alignment.CenterEnd)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;jetpack-compose学习-modifier&quot;&gt; Jetpack Compose学习 -------- Modifier&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;padding-设置各个ui的padding&quot;&gt; padding 设置
      
    
    </summary>
    
      <category term="android" scheme="http://xue12311.github.io/categories/android/"/>
    
      <category term="Jetpack" scheme="http://xue12311.github.io/categories/android/Jetpack/"/>
    
    
      <category term="android" scheme="http://xue12311.github.io/tags/android/"/>
    
      <category term="Jetpack Compose" scheme="http://xue12311.github.io/tags/Jetpack-Compose/"/>
    
  </entry>
  
  <entry>
    <title>Jetpack Compose学习  LazyRow</title>
    <link href="http://xue12311.github.io/2021/05/25/Jetpack%20Compose/Jetpack%20Compose%20LazyRow/"/>
    <id>http://xue12311.github.io/2021/05/25/Jetpack Compose/Jetpack Compose LazyRow/</id>
    <published>2021-05-25T03:24:10.000Z</published>
    <updated>2021-05-27T14:14:41.894Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="jetpack-compose学习-lazyrow-延迟-水平-布局"> Jetpack Compose学习 -------- LazyRow 延迟 水平 布局</span></h2><h3><span id="lazyrow-延迟-水平-布局-简单使用"> LazyRow 延迟 水平 布局 简单使用</span></h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line">   <span class="function"><span class="keyword">fun</span> <span class="title">LazyRowDemo</span><span class="params">()</span></span> &#123;</span><br><span class="line">       <span class="keyword">val</span> list = listOf(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>) + ((<span class="number">0</span>..<span class="number">20</span>).map &#123; it.toString() &#125;)</span><br><span class="line">       LazyRow(Modifier.fillMaxHeight()) &#123;</span><br><span class="line">           items(</span><br><span class="line">               key = &#123; list.<span class="keyword">get</span>(it) &#125;,</span><br><span class="line">               count = list.size,</span><br><span class="line">               itemContent = &#123; item -&gt;</span><br><span class="line">                   <span class="keyword">val</span> content = list.<span class="keyword">get</span>(item)</span><br><span class="line">                   Log.d(<span class="string">"COMPOSE"</span>, <span class="string">"This get rendered <span class="subst">$&#123;content&#125;</span>"</span>)</span><br><span class="line">                   <span class="keyword">when</span> (content) &#123;</span><br><span class="line">                       <span class="string">"A"</span> -&gt; &#123;</span><br><span class="line">                           Text(text = content, style = TextStyle(fontSize = <span class="number">80</span>.sp))</span><br><span class="line">                       &#125;</span><br><span class="line">                       <span class="string">"B"</span> -&gt; &#123;</span><br><span class="line">                           Button(onClick = &#123;&#125;) &#123;</span><br><span class="line">                               Text(text = content, style = TextStyle(fontSize = <span class="number">80</span>.sp))</span><br><span class="line">                           &#125;</span><br><span class="line">                       &#125;</span><br><span class="line">                       <span class="string">"C"</span> -&gt; &#123;</span><br><span class="line">                       &#125;</span><br><span class="line">                       <span class="string">"D"</span> -&gt; &#123;</span><br><span class="line">                           Text(text = content)</span><br><span class="line">                       &#125;</span><br><span class="line">                       <span class="keyword">else</span> -&gt; &#123;</span><br><span class="line">                           Text(text = content, style = TextStyle(fontSize = <span class="number">80</span>.sp))</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           )</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;jetpack-compose学习-lazyrow-延迟-水平-布局&quot;&gt; Jetpack Compose学习 -------- LazyRow 延迟 水平 布局&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;lazyrow-延迟-水平-布局-简单
      
    
    </summary>
    
      <category term="android" scheme="http://xue12311.github.io/categories/android/"/>
    
      <category term="Jetpack" scheme="http://xue12311.github.io/categories/android/Jetpack/"/>
    
    
      <category term="android" scheme="http://xue12311.github.io/tags/android/"/>
    
      <category term="Jetpack Compose" scheme="http://xue12311.github.io/tags/Jetpack-Compose/"/>
    
  </entry>
  
</feed>
